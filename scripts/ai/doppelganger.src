/////////////////////////////////////////////////////////////////////////////
//
//  killpcs.src: Kill player-characters
//
//  TODO: Some server support for only paying attention to 'enteredarea'
//        and 'leftarea' events from PCs would be nice.
//        we just use the graphic at the moment, so we'd fight
//        NPCs too.  Oh well.
//
//  Author: ENS
//
//  Created: 4/98
//
//  Modified week of 6/15/99 by DW to allow speech and ranged attacks
//
/////////////////////////////////////////////////////////////////////////////

use npc;
use os;
use uo;
use cfgfile;

include "include/myutil";
include "include/npcbackpacks";

include "include/eventid";
include "include/randname";
include "include/npcutil";
include "include/npccast";
include "include/objtype";
include "include/anchors";
include "include/client";
include "ai/main/killpcsloop";
include "ai/combat/fight";
include "ai/combat/dgangercombatevent";
include "ai/setup/setup";
include "ai/setup/modsetup";
include "ai/main/loot";
include "ai/main/sleepmode";

const HALT_THRESHOLD := 8; // how close before he attacks?

var spellcast := 0;

program KillPlayers()

	if (getobjproperty(me, "frozen"))
		me.frozen := 1;
	endif

	me.name := "a slime";

	me.hidden := 1;
	saywords := 1;

	SetWarMode( 0 );

	main_AI_loop();

endprogram

function CloseDistance( opponent )

  var sleepdelay := 300 - (CInt(me.dexterity) * 1.5);
  if (sleepdelay < 0) sleepdelay := 0; endif
  
	var archerymovement := HasBow();

	var d := distance(me, opponent);
	if ( d > 15 )
		WalkToward( opponent );
		Sleepms(sleepdelay);
		return 0;
	endif

	if (!archerymovement)
		if ( d > 1 )
			WalkToward( opponent );
			Sleepms(sleepdelay);
			return 0;
		else
			return 1;
		endif
	else
		if (d = 1)
			ChangeWeapons();
		elseif ( d < 4 )
			WalkAwayFrom(opponent);
			Sleepms(sleepdelay);
			return 0;
		else
			if (!CheckLineOfSight(me,opponent))
				RunRandom(opponent,2);
				Sleepms(sleepdelay);
				return 0;
			else
				return 1;
			endif
		endif
	endif

endfunction

function HasBow()

	var ammotype := 0;
	var bowarmed := 0;
	var weapon := me.weapon;
	if (!weapon.objtype)
		return 0;
	endif
	case (weapon.objtype)
		0x13B2:
			bowarmed := 1;
			ammotype := 0xf3f;//bow and arrows
		0x0f4f:
		0x13fd:
			bowarmed := 1;
			ammotype := 0x1bfb;//xbow and bolts
		0x6050:
			bowarmed := 1;
			ammotype := 0x6051;//firebow and firearrows
		default: return 0;
	endcase
	if (!bowarmed) return 0; endif

	var myammo := EnumerateItemsInContainerOfObjtype(me.backpack, ammotype);

	if (!len(myammo))
		ChangeWeapons();
		return 0;
	else
		return 1;
	endif

endfunction

function ChangeWeapons()

	var weapon := GetEquipmentByLayer(me,LAYER_HAND1);
	var shield := GetEquipmentByLayer(me,LAYER_HAND2);

	if (weapon)
		MoveItemToContainer(weapon, me.backpack);
	endif
	if (shield)
		MoveItemToContainer(shield, me.backpack);
	endif

endfunction
