/////////////////////////////////////////////////////////////////////////////
//
//  spellpcs.src: spell caster AI
//
//
//  Author: DCT, stealing most from ENS's killpc.src
//
//  Created: 6/98

//
/////////////////////////////////////////////////////////////////////////////

use npc;
use os;
use uo;
use cfgfile;

include "include/myutil";
include "include/npcbackpacks";

include "include/eventid";
include "include/randname";
include "include/npcutil";
include "include/objtype";
include "include/speech";
include "include/npccast";
include "include/anchors";
include "ai/main/mainloopgood";
include "ai/combat/fight";
include "ai/combat/spellcombatevent";
include "ai/setup/modsetup";
include "ai/setup/setup";
include "ai/main/sleepmode";

const HALT_THRESHOLD := 10; // how close before he attacks?

var runaway := 0;

program KillPlayers()

	SetWarMode( 0 );

	if (getobjproperty(me, "frozen"))
		me.frozen := 1;
	endif
       
	main_AI_loop(ReadGameClock() + 10);

endprogram

function CloseDistance( opponent )

  var sleepdelay := 300 - (CInt(me.dexterity) * 1.5);
  if (sleepdelay < 0) sleepdelay := 0; endif
  
//	return 1 if we DON'T need to move
//	return 0 if we DO need to move

	var d:=distance(me,opponent);
	if ( d > 10 )
		WalkToward( opponent );
		Sleepms(sleepdelay);
		return 0;
	endif

    case d

        1:              // the most likely, so first 
        0:
		if ( runaway < 15 )
			if (me.mana > (me.maxmana/3))
				WalkAwayFrom( opponent );
				Sleepms(sleepdelay);
				return 3;
			endif
			runaway := runaway + 1;
			if (runaway = 15)
				turntoward( opponent );
			endif
		endif
            	return 1;
	default:
		runaway := 0;
		if (me.mana < (me.maxmana/3))
			WalkToward( opponent );
			Sleepms(sleepdelay);
			return 0;
		elseif (!CheckLineOfSight( me, opponent) )
			if (runrandom(opponent))
			Sleepms(sleepdelay);
				return 2;
			endif
		endif
		return 1;
    endcase

endfunction
