
use uo;
use os;
use cfgfile;

var config;
var elem;

//fixme: take the fire out of his damned pack!
//return control to the player once the fire is started
//make the fire a light source

program UseStuff( character, stuff )
    var skill;
    var obj2;
    var skill_needed;
    var points;
    var targetitem;
    var prompt;
    var target_quantity;
    var desc;
    var destroy_failure;
    var quantity1;
    var quantity2;
    var use_on;
    var destroy_target_success;
    var destroy_target_failure;
    var leftover;
    var leftover_amount;
    var success_sound;
    var failure_sound;
    var targetted;
    var key_id;
    var thetarget;


//    print ("Cstr(stuff.objtype)) = " + Cstr(stuff.objtype));

    if (not Accessible( character, stuff))
        SendSysMessage( character, "You can't reach that!" );
        return;
    endif
   
  
    prompt := "Select an object to use this on";
 
   
    SendSysMessage(character, prompt);
    targetted := TargetCoordinates(character);
       
    if (targetted.item.objtype)
        use_on := targetted.item;
    elseif (targetted.mobile.objtype)
        use_on := targetted.mobile;
    else
        use_on := targetted;
    endif
   
   
    if (not Accessible( character, use_on))
        SendSysMessage( character, "You can't reach that!" );
        return;
    endif
   

   
    config := ReadConfigFile( "use_stuff");
   
   
    key_id := CStr(stuff.objtype) + "+" + CStr(use_on.objtype);
   
    elem := FindConfigElem(config, key_id);
   
    if (!elem)
        SendSysMessage(character, "You don't know how to use these together!");
        return;
    endif
   
   
    skill := CInt(GetElemProperty(elem, "skill"));
    targetitem := CInt(GetElemProperty(elem, "product"));
    skill_needed := CInt(GetElemProperty(elem, "skill_needed"));
    points := CInt(GetElemProperty(elem, "points"));
    target_quantity := CInt(GetElemProperty(elem, "target_quantity"));
   // target_quantity := Cint(GetElemProperty(elem, "destroy"));
    quantity1 := CInt(GetElemProperty(elem, "quantity1"));
    quantity2 := CInt(GetElemProperty(elem, "quantity2"));
    destroy_target_success := CInt(GetElemProperty(elem, "destroy_target_on_success"));
    destroy_target_failure := CInt(GetElemProperty(elem, "destroy_target_on_failure"));
    destroy_failure := CInt(GetElemProperty(elem, "destroy_material_on_failure"));
    leftover := CInt(GetElemProperty(elem, "leftover"));
    leftover_amount := CInt(GetElemProperty(elem, "leftover_amount"));
    success_sound := CInt(GetElemProperty(elem, "success_sound"));
    failure_sound := CInt(GetElemProperty(elem, "failure_sound"));
   
   
    if (stuff.amount < quantity1)
        SendSysMessage(character, "You don't have enough of that to make anything");
        return;
    endif
   
    if (target_quantity == 0 )
        target_quantity := 1;
    endif

   
   
    if (! use_on)
        SendSysMessage(character, "Targetting canceled.");
        return;
    endif
   
    if (not Accessible(character, use_on))
        SendSysMessage(character, "You can't reach that!");
        return;
    endif
   
    if (use_on.amount < quantity2)
        SendSysMessage(character, "You don't have enough of that to make anything");
        return;
    endif
   
    if ( skill > "")
        if (CheckSkill(character, skill, skill_needed, points))
        SendSysMessage(character, "You start to craft the item.");
        Sleep( 5 );
        
            SubtractAmount(stuff, quantity1);  //use material
            CreateItemInBackpack(character, targetitem, target_quantity);
            if (target_quantity > 1)
                desc := "items";
            else
                desc := "item";
            endif
           
            if (destroy_target_success)
                SubtractAmount(use_on, 1);
            endif
            PlaySoundEffect(character, success_sound);
            SendSysMessage(character, "You place the " + desc  + " in your backpack");
            if (leftover)
                CreateItemInBackpack(character, leftover, leftover_amount);
            endif
        else
            PlaySoundEffect(character, failure_sound);
            if (destroy_failure)
                SendSysMessage(character, "You fail, and destroy the material");
                SubtractAmount(stuff, 1);
            else
                SendSysMessage(character, "You fail to produce the item");
            endif

            if  (destroy_target_failure)
                SubtractAmount(use_on, 1);
            endif
        endif
       
    else       
        //don't need a skill check 
        SubtractAmount(stuff, quantity1);
       
       
        CreateItemInBackpack(character,targetitem,  target_quantity);
        if (target_quantity > 1)
            desc := "items";
        else
            desc := "item";
        endif 
               
        if (destroy_target_success)
            SubtractAmount(use_on, 1);
        endif 
                  
   endif
   
endprogram


