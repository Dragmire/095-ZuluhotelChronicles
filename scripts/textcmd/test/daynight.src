// 2/6/99 Day/Night transitions for one time zone only (britain) -Rac
// jan 22, 2000 added 2 timezones by Zulu zuluhotel@hotmail.com
/*

*/
Use uo;
Use os;

Include "include/time";

Const SECONDS_PER_MINUTE := 60;
Const SECONDS_PER_HOUR := 3600;

Set_Critical( 1 );

Var length     := ( ( 24 * 60 ) * 24 );
Var dawn       := ( length * ( 0.25 ) );
Var transtime  := 60;
Var nightlevel := 20;
Var daylevel   := 0;

Var Night      := 19;
Var TDusk       := 18;

Var Day        := 7;
Var TDawn       := 6;

Program FromDuskToDawn( Who )

    Var System, Seconds, xTime, xHour;

    System := polcore();
    Seconds := System.systime;
    GetDateString( Seconds );
    xTime := GetTimeString( Seconds, 0 );
    xTime := SplitWords( xTime, ":" );

    xHour := CInt( xTime[1] );

    xHour := xHour + 1;
    
    SendSysMessage( Who, CStr( xHour ) );
    
    If( ( xHour >= 19 ) && ( xHour <= 23 ) || ( xHour >= 1 ) && ( xHour <= 6 ) )
    SendSysMessage( Who, "Nighttime" );

    Elseif( ( xHour >= TDusk ) && ( xHour <= Night ) )
    SendSysMessage( Who, "Dusktime" );

    Elseif( ( xHour >= Night ) && ( xHour <= TDawn ) )
    SendSysMessage( Who, "Dawntime" );

    Elseif( ( xHour >= 7 ) && ( xHour <= 18 ) )
    SendSysMessage( Who, "Daytime" );

    Endif
    
    SendSysMessage( Who, "Wtf..." );

Endprogram

Function GetTimeReal( byref secs )

    Var hour;
    Var minutes;
    Var AmPm := "PM";

    hour    := CInt( secs / SECONDS_PER_HOUR );
    secs    := secs % SECONDS_PER_HOUR;

    minutes := CInt( secs / SECONDS_PER_MINUTE );
    secs    := secs % SECONDS_PER_MINUTE;

    If( hour > 12 )
    hour := hour - 12;
    AmPm := "AM";
    Endif

    Return { hour, AmPm };

Endfunction

function GetTime( byref secs )

	var hour;
	var minutes;
        var thetime := array;

	CalculateTime( secs, hour, minutes );

	return { hour, minutes, secs };

endfunction


