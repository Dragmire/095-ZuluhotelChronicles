/////////////////////////////////////////////////////////////////////////////
//
//  saver - Saves world state periodically
//
//          complains, via syslog and broadcast, if it can't.
//          If this script dies, saverchk should notice and complain.
//
/////////////////////////////////////////////////////////////////////////////

use os;
use uo;

include saveopts;
include "include/client";

print ("Saving every " + MINUTES_BETWEEN_SAVES + " minutes");


while (1)
    sleep( MINUTES_BETWEEN_SAVES * 60 );

    Broadcast( "SYSTEM: Saving in 2 minutes.", FONT_BOLD, 33 );
    Broadcast( "SYSTEM: Saving in 2 minutes.", FONT_BOLD, 33 );
    sleep(120);
    syslog( "Saving World State" );
    Broadcast( "SYSTEM: Saving World State", FONT_BOLD, 33 );
    Broadcast( "REPEAT: Saving World State", FONT_BOLD, 33 );
    sleep(1);
    var duration := ReadGameClock();
    var res := SaveWorldState();
    duration := ReadGameClock() - duration;

    if (res)
        SetGlobalProperty( "#:saver:lastsave", ReadGameClock() );
        syslog( "World state saved (" + duration + " seconds)" );
    else
        Broadcast( "Error saving world state!  Oh, the humanity!", FONT_BOLD, 33  );
        syslog( "Error saving world state: " + res );
    endif

    Broadcast( "SYSTEM: World Saved", FONT_BOLD, 33 );
endwhile
