/////////////////////////////////////////////////////////
//vet.src
//
//Just like healing, but works on tamed NPCs
//
// Author: Dream Weaver
//
//////////////////////////////////////////////////////////

use uo;
use cfgfile;
use os;

include "include/client";
include "include/dotempmods";
include "include/classes";
include "include/random";
include "include/res";

const POINT_MULTIPLIER	:= 15;
const SOUND_EFFECT_RES 	  := 0x215;
const BLOODY_BANDAGE 	  := 0x0e20;

//To heal
const BANDAGES_TO_HEAL	  := 1;
const DELAY_TO_HEAL	  := 5;

//To cure
const BANDAGES_TO_CURE	  := 2;
const DELAY_TO_CURE	  := 6;

//To res
const BANDAGES_TO_RES	  := 5;
const DELAY_TO_RES	  := 10;
const RES_DIFFICULTY	  := 105;

var props array;


//Delay multiplier when you heal yourself
const DELAY_MULT_FOR_SELF := 3;

//Multiply diff by this for the point value
const POINTS_MULTIPLIER	  := 20;


program use_bandages ( parms )
	var character := parms[1];
	var patient := parms[2];
	var bandages := parms[3];
 	if (GetObjProperty(character,"DoingVet"))
		SendSysMessage(character, "You are already doing something else.");
		return;
	endif
	SetObjProperty(character,"DoingVet",1);
	if( patient.poisoned )
		TryToCure( character , patient , bandages );
	elseif(  GetHp( patient ) < GetMaxHp( patient ) )
		TryToHeal( character , patient , bandages );
	elseif( patient.objtype == UOBJ_CORPSE )
		Res_Animal(character, patient,bandages);
	else
		SendSysMessage( character , "This creature don't even have a bruise!" );
	endif
	EraseObjProperty(character,"DoingVet");	
endprogram


function TryToCure( character , patient , bandages )

	if( bandages.amount < BANDAGES_TO_CURE )
		SendSysMessage( character , "You don't have enough bandages." );
		EraseObjProperty(character,"DoingVet");	
		return;
	endif
	
	var delay 	:= DELAY_TO_CURE;
	
	if( patient.serial == character.serial )
		delay := Cint( delay * DELAY_MULT_FOR_SELF );
		SendSysMessage( character , "You start to cure yourself" );
	else
		SendSysMessage( character , "You start to cure " + patient.name );
	 	SendSysMessage( patient , character.name + " starts to cure you" );
	endif
	
	if( GetObjProperty( character , CLASSEID_RANGER ) )
		delay := Cint( delay / CLASSE_BONUS );
	endif
	
	Sleep( delay );
	
	if( Distance( character , patient ) > 1 )
		SendSysMessage( character , "The creature is too far." );
		EraseObjProperty(character,"DoingVet");	
		return;
	endif
	
	if( character.dead )
		EraseObjProperty(character,"DoingVet");	
		return;
	endif
	
	if( patient.dead )
		SendSysMessage( character , "The creature is dead." );
	endif
	
	var plvl 	:= PoisonLevel( patient );
	var diff 	:= cint(plvl * 20 + 15);
	var points 	:= diff * POINTS_MULTIPLIER;
	
	if( CheckSkill( character , SKILLID_VETERINARY , diff , points ) )
		CurePoison( patient , 0 , character.name + " has cured you!" );
		SendSysmessage( character , "You cured the creature." );
	else
		SendSysmessage( character , "You couldn't cure the creature." );
	endif
	
	SubtractAmount( bandages , BANDAGES_TO_CURE );
	CreateItemInBackpack( character , BLOODY_BANDAGE , BANDAGES_TO_CURE );
	
endfunction


function TryToHeal( character , patient , bandages )

	if( bandages.amount < BANDAGES_TO_HEAL )
		SendSysMessage( character , "You don't have enough bandages." );
		EraseObjProperty(character,"DoingVet");	
		return;
	endif

	var delay 	:= DELAY_TO_HEAL;
	var healing	:= Cint( GetEffectiveSkill( character , SKILLID_VETERINARY ) / 10 );
	var animal	:= Cint( GetEffectiveSkill( character , SKILLID_ANIMALLORE ) / 5 );
	var healed	:= RandomDiceStr( healing + "d4+" + healing ) + RandomDiceStr( "1d8+2" ) + animal;
	
	if( patient.serial == character.serial )
		delay := Cint( delay * DELAY_MULT_FOR_SELF );
		SendSysMessage( character , "You start to heal yourself." );
	else
		SendSysMessage( character , "You start to heal " + patient.name );
	 	SendSysMessage( patient , character.name + " starts to heal you" );
	endif
	
	if( GetObjProperty( character , CLASSEID_RANGER ) )
		delay := Cint( delay / CLASSE_BONUS );
		healed := Cint( healed * CLASSE_BONUS );
	endif
	
	var count	:= 10;
	var shp	:= GetHP(character);
	while( delay )
		Sleep( 1 );
		delay := delay - 1;
		if( GetHP(character) < shp )
			SendSysMessage( character , "Yours fingers slip..." );
			count := count - 1;
			shp   := GetHP(character);
		endif
	endwhile

	if( Distance( character , patient ) > 1 )
		SendSysMessage( character , "The creature is too far." );
		EraseObjProperty(character,"DoingVet");	
		return;
	endif
	
	if( character.dead )
		EraseObjProperty(character,"DoingVet");	
		return;
	endif
	
	if( patient.dead )
		SendSysMessage( character , "The creature is dead." );
	endif
	
	var diff 	:= cint(GetMaxHP(patient) - GetHP(patient) );
	var points 	:= diff * POINTS_MULTIPLIER;
	
	var bonus := GetObjProperty( patient , "HealingIncrease" );
	if( bonus )
		healed := healed + Cint( healed * bonus * 0.1 );
	endif
	
	if( count < 1 )
		count := 1;
	endif
	
	healed := Cint( healed * count / 10 );
	
	if( CheckSkill( character , SKILLID_VETERINARY , diff , points ) )
		HealDamage( patient , healed );
		SendSysMessage( character , "You healed " + healed + " damage." );
		SendSysmessage( patient , character.name + " healed " + healed + " damage." );
	else
		SendSysmessage( character , "You couldn't heal the creature." );
	endif
	
	SubtractAmount( bandages , BANDAGES_TO_HEAL );
	CreateItemInBackpack( character , BLOODY_BANDAGE , BANDAGES_TO_HEAL );
	
endfunction

function Res_Animal(character, patient,bandages)
	var conf := ReadConfigFile( ":*:npcdesc" );
	var animal_lore := GetEffectiveskill( character , SKILLID_ANIMALLORE );
	var vet := GetEffectiveskill( character , SKILLID_VETERINARY );
	var tame_skill:= GetAttribute( character , SKILLID_TAMING );	
	var type := GetObjProperty(patient,"npctemplate");
	var oldmaster := 0, oldscript:=0, oldprevtamed:=0, oldcut := 0;
	var newnumres;
	var speclevel;

	if( animal_lore < 90 or vet < 90 )
		SendSysMessage( character , "You don't have enough skill to ressurect this creature." );
		EraseObjProperty(character,"DoingVet");	
	 	return;
	endif

	newnumres := GetObjProperty(patient,"numres");
	if(!GetObjProperty(patient,"alreadyresed"))
//		SendSysMessage( character , "first time. setting to 3+spec" );
		SetObjProperty(patient,"alreadyresed",1);
		SetObjProperty(patient,"FirstTime",1);
//		speclevel := GetObjProperty( character , CLASSEID_RANGER);
	//	if(!speclevel) speclevel := 0; endif
		newnumres := ((Random(3)+1) + GetObjProperty(character,"IsRanger"));
		SetObjProperty(patient,"numres",newnumres);  //speclevel + 3);

	endif

	newnumres := Cint(GetObjProperty(patient,"numres"));

//	SendSysMessage( character , "numres = ",newnumres );	

	if(newnumres > 0)

		if( bandages.amount < BANDAGES_TO_RES )
			SendSysMessage( character , "You don't have enough bandages." );
			EraseObjProperty(character,"DoingVet");	
			return;
		endif

		if(!GetObjProperty(patient,"master"))
			SendSysmessage( character , "You can only resurrect tammed animals." );
			EraseObjProperty(character,"DoingVet");	
			return;
		endif

		if(GetObjProperty( patient , "animated" ))
			SendSysMessage( character , "Cannot resurrect animated creatures." );
			EraseObjProperty(character,"DoingVet");	
			return;
		endif

		if(GetObjProperty( patient , "summoned" ))
			SendSysMessage( character , "Cannot resurrect Summoned creatures." );
			EraseObjProperty(character,"DoingVet");	
			return;
		endif

		if(GetObjProperty( patient , "charmed" ))
			SendSysMessage( character , "Cannot resurrect Charmed creatures." );
			EraseObjProperty(character,"DoingVet");	
			return;
		endif
		var aname := patient.name;
		aname["A corpse of"] := "";
		var newname := aname;
		var difficulty := GetObjProperty( patient , "tamableAt" );
		if( !difficulty )
			var elem := FindConfigElem( conf , type );
			difficulty := GetConfigInt( elem , "tameskill" );
		endif	
		if(tame_skill >= difficulty)
	
			SendSysMessage( character , "You try to bring " + newname + " back to life." );

			var delay := DELAY_TO_RES;

			Sleep( delay );

			if( Distance( character , patient ) > 1 )
				SendSysMessage( character , "Your patient is too far." );
				EraseObjProperty(character,"DoingVet");	
				return;
			endif


			if( character.dead )
				EraseObjProperty(character,"DoingVet");	
				return;
			endif

			if(character.multi || patient.multi)
				SendSysmessage( character , "You couldn't resurrect your patient." );
			elseif( CheckSkill( character , SKILLID_VETERINARY , RES_DIFFICULTY , RES_DIFFICULTY * POINTS_MULTIPLIER ) )
				props.+facing := character.facing;
//				SendSysMessage(character,"type = "+patient.corpsetype);
				var newanimal := CreateNpcFromTemplate( type, character.x, character.y, character.z, props );
				oldmaster := GetObjProperty(patient,"master");
				SetObjProperty(newanimal,"master",oldmaster);
				oldscript := GetObjProperty(patient,"script");
				SetObjProperty(newanimal,"script",oldscript);
				oldcut := GetObjProperty(patient,"cut");
				SetObjProperty(newanimal,"cut",oldcut);
				SetObjProperty(newanimal,"alreadyresed",1);

				SetObjProperty( newanimal , "noloot" , 1 );
					If (CheckSkill(character, SKILLID_TAMING, difficulty + 10, (difficulty + 10) * POINT_MULTIPLIER)) 
						newanimal.setmaster( oldmaster );
						newanimal.script := "tamed";
					endif
				if(!GetObjProperty(patient,"FirstTime"))
					newnumres := newnumres - 1;
					EraseObjProperty(patient,"FirstTime");
				endif			
				SetObjProperty(newanimal,"numres", newnumres);

				RestartScript(newanimal);
				DestroyItem(patient);
				newanimal.name:=newname;
				PlaySoundEffect( patient , SOUND_EFFECT_RES );
				SendSysmessage( character , "You bring your patient back to life!" );
			else
				SendSysmessage( character , "You couldn't resurrect your patient." );
			endif

			SubtractAmount( bandages , BANDAGES_TO_RES );
			CreateItemInBackpack( character , BLOODY_BANDAGE , BANDAGES_TO_RES );
		else
			SendSysMessage( character , "You dont have enough taming to bring " + newname + " back to life." );
		endif
	else
		SendSysMessage( character , "This creature cannot be resurrected again. It has seen the last of this world." );	
	endif
endfunction