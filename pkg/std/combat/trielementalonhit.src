//////////////////////////////////////////////////////////////////////////////////////////
//											//
//	trielementalscript :								//
//											//
//	Make the special weapon to ramdomly cast a lightning on the defender.		//
//	The % of chance that lightning will be cast is included in the itemdesc.	//
//	The lightning follow the normal spell damages and use the wielder magery	//
//	and eval int to determine it.							//													//
//											//
//////////////////////////////////////////////////////////////////////////////////////////


use uo;

include "include/spelldata";
include "include/damages";
include "include/random";
program trielementalonhit( parms )

	var attacker 	 := parms[1];
	var defender 	 := parms[2];
	var weapon 	 := parms[3];
	var armor 	 := parms[4];
	var basedamage := parms[5];
	var rawdamage	 := parms[6];
	
	var chance := GetObjProperty( armor , "ChanceOfEffect" );
	if(RandomDiceStr("1d100") <= chance)

		var targ;
		if( GetObjProperty( armor , "Cursed" ) )
			targ := defender;
		else
			targ := attacker;
		endif

		var spelldmg := CalcSpellDamage( attacker, targ , 3 );
		PlayMovingEffect( attacker , targ , FX_SPELL_FIREBALL , 5 , 1 );
		PlaySoundEffect( attacker , SFX_SPELL_FIREBALL );
		Sleepms( 250 );

		spelldmg := spelldmg + CalcSpellDamage( attacker , targ , 3 );
		PlaySoundEffect( targ , SFX_SPELL_LIGHTNING );
		PlayLightningBoltEffect( targ );
		Sleepms( 250 );

		spelldmg := spelldmg + CalcSpellDamage( attacker , targ , 3 );
		PlaySoundEffect( targ , SFX_SPELL_ICE_STRIKE1);
		PlayStationaryEffect( targ.x , targ.y , targ.z , 0x3789, speed:=30, loop:=30);
		PlaySoundEffect( targ , SFX_SPELL_ICE_STRIKE2);

		spelldmg := Resisted( attacker , targ , 9 , spelldmg );
		ApplyTheDamage( targ , defender , spelldmg , DMGID_MAGIC );
		
	endif
	
	if( basedamage != rawdamage )
		rawdamage := rawdamage - 15;
		if( rawdamage < 1 )
			rawdamage := 1;
		endif
	endif
	
	ApplyTheDamage( defender , attacker , rawdamage );

endprogram