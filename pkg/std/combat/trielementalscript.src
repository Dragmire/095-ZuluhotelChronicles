//////////////////////////////////////////////////////////////////////////////////////////
//											//
//	trielementalscript :								//
//											//
//	Make the special weapon to ramdomly cast a lightning on the defender.		//
//	The % of chance that lightning will be cast is included in the itemdesc.	//
//	The lightning follow the normal spell damages and use the wielder magery	//
//	and eval int to determine it.							//													//
//											//
//////////////////////////////////////////////////////////////////////////////////////////


use uo;

include "include/spelldata";
include "include/hitscriptinc";
include "include/random";
program trielementalscript(attacker, defender, weapon, armor, basedamage, rawdamage)

	rawdamage := RecalcDmg( attacker , defender , weapon , armor , basedamage + 10 );
	
	var chance := GetObjProperty(weapon, "ChanceOfEffect");
	
	if(RandomDiceStr("1d100") <= chance)
	
		var targ;
		if( GetObjProperty( weapon , "Cursed" ) )
			targ := attacker;
		else
			targ := defender;
		endif

		var spelldmg := CalcSpellDamage( attacker, targ , 3 );
		PlayMovingEffect( attacker , targ , FX_SPELL_FIREBALL , 5 , 1 );
		PlaySoundEffect( attacker , SFX_SPELL_FIREBALL );
		Sleepms( 250 );

		spelldmg := spelldmg + CalcSpellDamage( attacker , targ , 3 );
		PlaySoundEffect( targ , SFX_SPELL_LIGHTNING );
		PlayLightningBoltEffect( targ );
		Sleepms( 250 );

		spelldmg := spelldmg + CalcSpellDamage( attacker , targ , 3 );
		PlaySoundEffect( targ , SFX_SPELL_ICE_STRIKE1);
		PlayStationaryEffect( targ.x , targ.y , targ.z , 0x3789, speed:=30, loop:=30);
		PlaySoundEffect( targ , SFX_SPELL_ICE_STRIKE2);

		spelldmg := Resisted( attacker , targ , 8 , spelldmg );
		ApplyTheDamage( targ , attacker , spelldmg , DMGID_MAGIC );
		
	endif
	
	DealDamage( attacker , defender , weapon , armor , basedamage , rawdamage );

endprogram