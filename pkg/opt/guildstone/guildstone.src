use uo;
use os;

include "include/yesno";
include "guilddata";

program use_guild_stone(who, stone)
  EraseObjProperty(who, "IsMeditating");
  EraseObjProperty(who, "HealTimer");
    if(not Accessible(who,stone))
    return;
  endif
  if(!reserveitem(stone))
    SendSysMessage(who, "Guild Stone in use.",3,34);
    return;
  endif
  guild_id:=getobjproperty(stone, "guild_id");
  var guild_pl:=getobjproperty(who, "guild_id");
  if((guild_id == 0)&&(!guild_pl.errortext))
    PrintTextAbovePrivate(stone, "You are already a member of "+FindGuild(guild_pl).getprop("guildname"),who);
    return;
  endif
  var guild:=FindGuild(guild_id);
  var count:=guild.members;
  if(guild.errortext)
    destroyitem(stone);
    return;
  endif
  if(((guild_pl <> guild_id)or(!guild.ismember(who)))and(who.cmdlevel < 3))
    var gm:=findgm(guild);
    if(guild.getprop("guildabv")<>"NONE")
      viewdata[1]:="["+guild.getprop("guildabv")+"]";
    endif
    viewdata[2]:=guild.getprop("guildname");
    viewdata[3]:="Members: "+count.size();
    viewdata[4]:="GM: "+gm[1];
    viewlayout[10]:="gumppic 420 65 "+guild.getprop("guildicon");
    if(!guild_pl.errortext)
      var guild2:=FindGuild(guild_pl);
      if(guild2.isallyguild(guild))
        viewdata[5]:="Ally Guild";
        viewlayout[11]:="text 270 40 70 4";
      elseif(guild2.isenemyguild(guild))
        viewdata[5]:="Enemy Guild";
        viewlayout[11]:="text 270 40 34 4";
      endif
    endif
    SendDialogGump(who, viewlayout, viewdata);
    return;
  endif
  var gm := findgm(guild);
  count:=0;
  if(gm[1] == "In Vote")
    if(SetFealty(guild,who) == 0)
      SendSysMessage(who, "You have to set your fealty.", 3, 70);
      return;
    endif
    findnewgm(guild);
  endif
  buildgump(guild,who,stone);
endprogram

function findnewgm(guild)
  var i,vote,all:=guild.members,count;
  var dict := dictionary;
  for(i:=1;i<=all.size();i:=i+1)
    vote:=getobjproperty(all[i], "fealty");
    if(dict.exists(vote))
      count:=dict[vote]+1;
      dict[vote]:=count;
    else
      dict.insert(vote,1);
    endif
  endfor
  var winner:=0,votes:=dict.keys(),tie:=0;
  count:=0;
  for(i:=1;i<=dict.size();i:=i+1)
    vote:=dict[votes[i]];
    if(vote>count)
      count:=vote;
      winner:=votes[i];
      tie:=0;
    elseif(vote==count)
      tie:=1;
    endif
  endfor
  if(!tie)
    guild.setprop("gm",winner);
  endif
endfunction

function buildgump(guild,who,stone)
  var gm:=findgm(guild);
  if(guild.getprop("guildabv")=="NONE")
    data[1]:=guild.getprop("guildname");
  else
    data[1]:=guild.getprop("guildname")+" ["+guild.getprop("guildabv")+"]";
  endif
  data[2]:="GM: "+gm[1];
  var icon:=guild.getprop("guildicon");
  if((gm[2]<>who.serial)and(who.cmdlevel < 3))
    layout[34]:="";
    layout[36]:="";
  endif
  layout[35]:=("gumppic 440 50 "+icon);
  var fealty:=getobjproperty(who, "fealty"),i,all:=guild.members;
  if(fealty==who.serial)
    data[7]:="Yourself.";
  else
    for(i:=1;i<=all.size();i:=i+1)
      if(all[i].serial==fealty)
        data[7]:=all[i].name + ".";
      endif
    endfor
  endif
  if(guild.getprop("guildabv")=="NONE")
    layout[32]:="text 318 212 0 15";
    data[16]:="not defined.";
  else
    if(getobjproperty(who, "abv")=="0")
      layout[32]:="text 318 212 34 15";
      data[16]:="Off.";
    else
      layout[32]:="text 318 212 70 15";
      data[16]:="On.";
    endif
  endif
  var box:=SendDialogGump(who,layout,data);
  var choose:=0;
  if(box[0]=1000)
    return;
  elseif(box[0]==2000)
    foreach k in(box.keys)
      if(k>0 and k<1000)
        choose:=k;
        break;
      endif
    endforeach
  else
    return;
  endif
  if(!choose or choose==0)
    buildgump(guild,who,stone);
    return;
  endif
  case(choose)
    0: return;
    1: recruit(guild,who);
    2: viewmembers(guild,who);
    3: viewcharter(guild,who);
    4: SetFealty(guild,who);
    5: Toggle_Showing(guild,who);
    6: resign(guild,who,stone);return;
    7: viewrecruits(guild,who);
    8: yourallies(guild,who);
    9: yourenemies(guild,who);
    10: viewstatus(guild,who);
    11: getclothes(guild, who, stone);
    12: gm_menu(guild,who,stone);return;
    default: return;
  endcase
  buildgump(guild,who,stone);
endfunction

function recruit(guild,who)
  SendSysMessage(who, "Select the player to recruit.");
  var targ:=Target(who,TGTOPT_CHECK_LOS+TGTOPT_NEUTRAL);
  if(!targ.acctname)
    SendSysMessage(who, "You can only target players.",3,34);
    sleep(3);
    return;
  endif
  if(GetObjProperty(targ, "guild_id"))
    SendSysMessage(who, "They are already in a guild.",3,34);
    sleep(3);
    return;
  endif
  SendSysMessage(targ, "Would you like to join the guild "+guild.getprop("guildname")+".",3,70);
  var answer:=YesNo(targ, "Join Guild?");
  if(!answer)
    SendSysMessage(targ, "You have not joined.",3,34);
    SendSysMessage(who,targ.name+" has decided not to join.",3,34);
    sleep(3);
    return;
  endif
  var i,recruits:=guild.getprop("recruits"),rsize:=recruits.size();
  if(recruits[1]<>"NONE")
    for(i:=1;i<=rsize;i:=i+1)
      if(cint(recruits[i])=targ.serial)
        SendSysMessage(who,targ.name+" has already recruited.",3,34);
        sleep(3);
        return;
      endif
    endfor
  else
    rsize:=0;
  endif
  recruits[rsize+1]:=targ.serial;
  guild.setprop("recruits",recruits);
  SendSysMessage(who,targ.name+" has been recruited.",3,70);
  SendSysMessage(targ, "You have been recruited to "+guild.getprop("guildname")+".",3,70);
  sleep(3);
endfunction

function viewmembers(guild,who)
  FillInArrays(guild,guild.members, "Member Listing");
  SendDialogGump(who,filllayout,filldata);
endfunction

function NameValidation(theString)
  var i, validstr:={"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "$", "*", "&", "#", "@", "!", "?", "+", "-", "^", " ",};
  theString:=lower(theString);
  for(i:=1;i<=len(theString);i:=i+1)
    if(!(theString[i] in validstr))return 0; endif
  endfor
  return 1;
endfunction

function viewcharter(guild,who)
  var line:=3,i,message:=guild.getprop("gc"),gm:=findgm(guild);
  if(message[1]=="NONE")
    message:={"", "No Charter has been set up yet.", ""};
  endif
  For(i:=4;i<=15;i:=i+1)
    if(message[i-3]<>error)
      chartviewdata[line-1]:=message[i-3];
      chartviewlayout[line+3]:="text 100 "+(82+((line-2)*20))+" 300 "+(line -2);
      line:=line+1;
    endif
  endfor
  chartviewdata[line-1]:="Guild Master "+gm[1];
  chartviewlayout[line+3]:="text 160 "+(82 +((line-2)*22))+" 600 "+(line -2);
  chartviewdata[1]:="Charter for "+guild.getprop("guildname");
  SendDialogGump(who,chartviewlayout,chartviewdata);
endfunction

function SetFealty(guild,who)
  var choose:=0,box,k,all:=guild.members;
  if(all.size()==1)
    SendSysMessage(who, "You only have one guild member.",3,34);
    sleep(3);
    return;
  endif
  FillInArrays(guild,all, "Declare Fealty");
  box:=SendDialogGump(who,filllayout,filldata);
  if(box[0]=1000)
    return 0;
  elseif(box[0]=1)
    foreach k in(box.keys)
      if(k>1)
        choose:=k;
        break;
      endif
    endforeach
  endif
  if(!choose or choose==0)
    return 0;
  endif
  setobjproperty(who, "fealty",choose);
  return 1;
endfunction

function Toggle_Showing(guild, who)
  var abv := guild.getprop("guildabv");
  var tname := "[" + abv + "]";
  if(getobjproperty(who, "abv") == "0")
    var gtitle := GetObjProperty(who, "guildtitle");
    if(!gtitle)
      SendSysMessage(who, "You do not have a guild title yet.");
      who.title_guild := abv;
    else
      who.title_guild := gtitle + ", " + tname;
      setobjproperty(who, "abv", 1);
    endif
  else
    setobjproperty(who, "abv", "0");
    sendsysmessage(who, abv);
    who.title_guild := abv;
  endif
endfunction

function fixname(who)
  var abv := getobjproperty(who, "abv");
  var result := find(who.name, " ["+abv+"]",1);
  var name:=who.name;
  if(result==0)
    return;
  endif
  result:=result-1;
  name := name[1,result];
  who.name := name;
endfunction

function resign(guild,who,stone)
  SendSysMessage(who, "Are you sure you want to resign?",3,34);
  var answer:=YesNo(who, "Quit Guild?");
  if(!answer)
    SendSysMessage(who, "Canceled.",3,34);
    return;
  endif
  var gm:=findgm(guild);
  if(who.serial==gm[2])
    guild.setprop("gm",0);
  endif
  guild.removemember(who);
  eraseobjproperty(who, "guildtitle");
  eraseobjproperty(who, "guild_id");
  eraseobjproperty(who, "fealty");
  who.title_guild:="";
  eraseobjproperty(who, "abv");
  eraseobjproperty(who, "talkchat");
  eraseobjproperty(who, "hearchat");
  var clothes1 := getobjproperty (who, "clothes1");
  var clothes2 := getobjproperty (who, "clothes2");
  setobjproperty (clothes1, "gmdestroy", 1);
  setobjproperty (clothes2, "gmdestroy", 1);
  destroyitem (clothes1);
  destroyitem (clothes2);
  eraseobjproperty (who, "clothes1");
  eraseobjproperty (who, "clothes2");
  SendSysMessage(who, "You are no longer a member of "+guild.getprop("guildname")+".",3,70);
  var i,all:=guild.members;
  if(all.size()==0)
    all:=guild.allyguilds;
    if(all.size()<>0)
      for(i:=1;i<=all.size();i:=i+1)
        guild.removeallyguild(all[i]);
      endfor
    endif
    all:=guild.enemyguilds;
    if(all.size()<>0)
      for(i:=1;i<=all.size();i:=i+1)
        guild.removeenemyguild(all[i]);
      endfor
    endif
    DestroyGuild(guild);
    destroyitem(stone);
    CreateItemInBackpack(who,0xa391,1);
  endif
endfunction

function viewrecruits(guild,who)
  var recruits:=guild.getprop("recruits");
  if(recruits[1]=="NONE")
    SendSysMessage(who, "There are no recruits.",3,34);
    sleep(3);
  else
    FillInArrays(guild,recruits, "Recruit Listing");
    SendDialogGump(who,filllayout,filldata);
  endif
endfunction

function gm_menu(guild,who,stone)
  var gm:=findgm(guild);
  if((!(gm[2] == who.serial))and(who.cmdlevel < 3))
    SendSysMessage(who, "Only the GuildMaster may access this menu.");
    return;
  endif
  if(guild.getprop("guildabv")=="NONE")
    gmdata[1]:=guild.getprop("guildname");
  else
    gmdata[1]:=guild.getprop("guildname")+" ["+guild.getprop("guildabv")+"]";
  endif
  gmdata[2]:="GM: "+gm[1];
  gmlayout.append("gumppic 440 50 "+guild.getprop("guildicon"));
  var box:=SendDialogGump(who,gmlayout,gmdata);
  var choose:=0;
  if(box[0]=1000)
    return;
  elseif(box[0]==2000)
    foreach k in(box.keys)
      if(k>0 and k<1000)
        choose:=k;
        break;
      endif
    endforeach
  else
    return;
  endif
  if(!choose)
    gm_menu(guild,who,stone);
    return;
  endif
  case(choose)
    0: return;
    1: SetGuildName(guild,who,stone);
    2: SetAbrevName(guild,who,stone);
    3: seticontype(guild,who);
    4: setcharter(guild,who);
    5: Dismiss(guild,who);
    6: setenemies(guild,who);
    7: setallies(guild,who);
    8: AcceptCandidate(guild,who);
    9: RefuseCandidate(guild,who);
    10: SetGMTitle(guild,who);
    11: GrantTitle(guild,who);
    12: Teleport(guild,who,stone);return;
    13: buildgump(guild,who,stone);return;
    14: setstonecolor(guild,who,stone);return;
    default: return;
  endcase
  gm_menu(guild,who,stone);
endfunction

function seticontype(guild,who)
  var i,box,counter:=cint((guild.getprop("guildicon")-5545)/2)+1;
  icondata[1]:=guild.getprop("guildname");
  for(i:=guild.getprop("guildicon");i<5588;i:=i+2)
    iconlayout[11]:= "gumppic 390 60 "+i;
    icondata[2]:=iconname[counter];
    counter:=counter+1;
    box:=SendDialogGump(who,iconlayout,icondata);
    if(box[0]=1000)
      return;
    elseif(box[0]==2000)
      guild.setprop("guildicon",i);
      SendSysMessage(who, "Your icon is now: "+iconname[counter-1]+".",3,70);
      sleep(3);
      return;
    elseif(box[0]==3000)
      if(i=5587)i:=5543; counter:=1; endif
    endif
  endfor
endfunction

function Dismiss(guild,who)
  var all:=guild.members;
  if(all.size()==1)
    SendSysMessage(who, "You only have one guild member.",3,34);
    sleep(3);
    return;
  endif
  FillInArrays(guild,all, "Dismiss Member");
  var choose:=0,box:=SendDialogGump(who,filllayout,filldata);
  if(box[0]==1000)
    return;
  elseif(box[0]==1)
    foreach k in(box.keys)
      if(k>1)
        choose:=k;
        break;
      endif
    endforeach
  else
    return;
  endif
  if(!choose or choose==0)
    return;
  endif
  if(choose==who.serial)
    SendSysMessage(who, "You can't dismiss yourself.",3,34);
    sleep(3);
    return;
  endif
  var i,gm := findgm(guild);
  if(choose==gm[2])
    guild.setprop("gm",0);
  endif
  for(i:=1;i<all.size();i:=i+1)
    if(all[i].serial=choose)break; endif
  endfor
  guild.removemember(all[i]);
  eraseobjproperty(all[i], "guild_id");
  eraseobjproperty(all[i], "fealty");
  fixname(all[i]);
  eraseobjproperty(all[i], "abv");
  eraseobjproperty(all[i], "talkchat");
  eraseobjproperty(all[i], "hearchat");
  all[i].title_guild:="";
  SendSysMessage(all[i], "You are no longer a member of "+guild.getprop("guildname"),3,34);
  SendSysMessage(who, "Player has been dismissed.",3,70);
  sleep(3);
endfunction

function setallies(guild,who)
  FillInArrays(guild,ListGuilds(), "Set Allies");
  var choose:=0,box:=SendDialogGump(who,filllayout,filldata);
  if(box[0]==1000)
    return;
  elseif(box[0]==1)
    foreach k in(box.keys)
      if(k>1)
        choose:=k;
        break;
      endif
    endforeach
  else
    return;
  endif
  if(!choose or choose=0)
    return;
  endif
  box:=FindGuild(choose);
  if(guild.isenemyguild(box))
    SendSysMessage(who, "You have to break the previous Enemy Status with this Guild, before an alliance can be made.",0x03,90);
    return;
  endif
  if(guild.isallyguild(box))
    var guildarray:=guild.getprop("GuildDeclareStatus");
    if(!guildarray)
      guildarray:={};
    endif
    var alreadypresent:=0;
    foreach gstatus in guildarray
      if(box.guildid=gstatus[2] and guild.guildid=gstatus[1])
        if(gstatus[3]=="BA")
          alreadypresent:=1;
          break;
        endif
      endif
    endforeach
    if(alreadypresent)
      SendSysMessage(who, "Your alliance has been broken.",0x03,90);
      guild.removeallyguild(box);
      var newArray:={};
      foreach gstatus in guildarray
        if(box.guildid=gstatus[2] and guild.guildid==gstatus[1])
          if(!(gstatus[3]=="BA"))
            newArray.append(gstatus);
          endif
        else
          newArray.append(gstatus);
        endif
      endforeach
      guild.setprop("GuildDeclareStatus",newarray);
    else
      var newArray:={};
      guildarray:=box.getprop("GuildDeclareStatus");
      if(!guildarray)
          guildarray:={};
      endif
      var alreadyMade:=0;
      foreach gstatus in guildarray
        if(guild.guildid==gstatus[2] and box.guildid==gstatus[1])
          if(gstatus[3]=="BA")
            alreadyMade:=1;
          else
            newArray.append(gstatus);
          endif
        else
          newArray.append(gstatus);
        endif
      endforeach
      if(alreadyMade)
        SendSysMessage(who, "Your request to break the alliance has retired.",0x03,90);
        box.setprop("GuildDeclareStatus",newarray);
      else
        SendSysMessage(who, "You have requested to break the alliance.",0x03,90);
        var request:={};
        request[1]:=box.guildid;
        request[2]:=guild.guildid;
        request[3]:="BA";
        guildarray.append(request);
        box.setprop("GuildDeclareStatus",guildarray);
      endif
    endif
  else
    var guildarray:=guild.getprop("GuildDeclareStatus");
    if(!guildarray)
      guildarray:={};
    endif
    var alreadypresent:=0;
    foreach gstatus in guildarray
      if(box.guildid==gstatus[2] and guild.guildid==gstatus[1])
        if(gstatus[3]=="RA")
          alreadypresent:=1;
          break;
        endif
      endif
    endforeach
    if(alreadypresent)
      SendSysMessage(who, "Your alliance has been made.",0x03,90);
      guild.addallyguild(box);
      var newArray:={};
      foreach gstatus in guildarray
        if(box.guildid==gstatus[2] and guild.guildid==gstatus[1])
          if(!(gstatus[3]=="RA"))
            newArray.append(gstatus);
          endif
        else
          newArray.append(gstatus);
        endif
      endforeach
      guild.setprop("GuildDeclareStatus",newarray);
    else
      var newArray:={};
      guildarray:=box.getprop("GuildDeclareStatus");
      if(!guildarray)
        guildarray:={};
      endif
      var alreadyMade:=0;
      foreach gstatus in guildarray
        if(guild.guildid==gstatus[2] and box.guildid==gstatus[1])
          if(gstatus[3]=="RA")
            alreadyMade:=1;
          else
            newArray.append(gstatus);
          endif
        else
          newArray.append(gstatus);
        endif
      endforeach
      if(alreadyMade)
        SendSysMessage(who, "Your request to make the alliance has retired.",0x03,90);
        box.setprop("GuildDeclareStatus",newarray);
      else
        SendSysMessage(who, "You have requested an alliance.",0x03,90);
        var request:={};
        request[1]:=box.guildid;
        request[2]:=guild.guildid;
        request[3]:="RA";
        guildarray.append(request);
        box.setprop("GuildDeclareStatus",guildarray);
      endif
    endif
  endif
endfunction

function setenemies(guild,who)
  FillInArrays(guild,ListGuilds(), "Set Enemies");
  var choose:=0,box:=SendDialogGump(who,filllayout,filldata);
  if(box[0]=1000)
    return;
  elseif(box[0]=1)
    foreach k in(box.keys)
      if(k>1)
        choose:=k;
        break;
      endif
    endforeach
  else
    return;
  endif
  if(!choose or choose=0)
    return;
  endif
  box:=FindGuild(choose);
  if(guild.isallyguild(box))
    SendSysMessage(who, "You have to break the previous Ally Status with this Guild, before a war can be made with it.",0x03,90);
    return;
  endif
  if(guild.isenemyguild(box))
    var guildarray:=guild.getprop("GuildDeclareStatus");
    if(!guildarray)
      guildarray:={};
    endif
    var alreadypresent:=0;
    foreach gstatus in guildarray
      if(box.guildid=gstatus[2] and guild.guildid=gstatus[1])
        if(gstatus[3]="BE")
          alreadypresent:=1;
          break;
        endif
      endif
    endforeach
    if(alreadypresent)
      SendSysMessage(who, "Your war has been stopped.",0x03,90);
      guild.removeenemyguild(box);
      var newArray:={};
      foreach gstatus in guildarray
        if(box.guildid==gstatus[2] and guild.guildid==gstatus[1])
          if(!(gstatus[3]=="BE"))
            newArray.append(gstatus);
          endif
        else
          newArray.append(gstatus);
        endif
      endforeach
      guild.setprop("GuildDeclareStatus",newarray);
    else
      var newArray:={};
      guildarray:=box.getprop("GuildDeclareStatus");
      if(!guildarray)
          guildarray:={};
      endif
      var alreadyMade:=0;
      foreach gstatus in guildarray
        if(guild.guildid==gstatus[2] and box.guildid==gstatus[1])
          if(gstatus[3]=="BE")
            alreadyMade:=1;
          else
            newArray.append(gstatus);
          endif
        else
          newArray.append(gstatus);
        endif
      endforeach
      if(alreadyMade)
        SendSysMessage(who, "Your request to stop the war has retired.",0x03,90);
        box.setprop("GuildDeclareStatus",newarray);
      else
        SendSysMessage(who, "You have request to stop the war.",0x03,90);
        var request:={};
        request[1]:=box.guildid;
        request[2]:=guild.guildid;
        request[3]:="BE";
        guildarray.append(request);
        box.setprop("GuildDeclareStatus",guildarray);
      endif
    endif
  else
    var guildarray:=guild.getprop("GuildDeclareStatus");
    if(!guildarray)
      guildarray:={};
    endif
    var alreadypresent:=0;
    foreach gstatus in guildarray
      if(box.guildid==gstatus[2] and guild.guildid==gstatus[1])
        if(gstatus[3]=="RE")
          alreadypresent:=1;
          break;
        endif
      endif
    endforeach
    if(alreadypresent)
      SendSysMessage(who, "Your declaration of war has been made.",0x03,90);
      guild.addenemyguild(box);
      var newArray:={};
      foreach gstatus in guildarray
        if(box.guildid==gstatus[2] and guild.guildid==gstatus[1])
          if(!(gstatus[3]=="RE"))
            newArray.append(gstatus);
          endif
        else
          newArray.append(gstatus);
        endif
      endforeach
      guild.setprop("GuildDeclareStatus",newarray);
    else
      var newArray:={};
      guildarray:=box.getprop("GuildDeclareStatus");
      if(!guildarray)
          guildarray:={};
      endif
      var alreadyMade:=0;
      foreach gstatus in guildarray
        if(guild.guildid==gstatus[2] and box.guildid==gstatus[1])
          if(gstatus[3]=="RE")
            alreadyMade:=1;
          else
            newArray.append(gstatus);
          endif
        else
          newArray.append(gstatus);
        endif
      endforeach
      if(alreadyMade)
        SendSysMessage(who, "Your declaration of war has retired.",0x03,90);
        box.setprop("GuildDeclareStatus",newarray);
      else
        SendSysMessage(who, "Your declaration of war has been made.",0x03,90);
        var request:={};
        request[1]:=box.guildid;
        request[2]:=guild.guildid;
        request[3]:="RE";
        guildarray.append(request);
        box.setprop("GuildDeclareStatus",guildarray);
      endif
    endif
  endif
endfunction

function yourallies(guild,who)
  var all:=guild.allyguilds;
  if(all.size()==0)
    SendSysMessage(who, "There are no ally guilds.",3,70);
    sleep(3);
  else
    FillInArrays(guild,all, "Ally Listing");
    SendDialogGump(who,filllayout,filldata);
  endif
endfunction

function yourenemies(guild,who)
  var all:=guild.enemyguilds;
  if(all.size()==0)
    SendSysMessage(who, "There are no enemy guilds.",3,34);
    sleep(3);
  else
    FillInArrays(guild,all, "Enemy Listing");
    SendDialogGump(who,filllayout,filldata);
  endif
endfunction

function viewstatus(guild,who)
  FillInArrays(guild,ListGuilds(), "View Status");
  if(filldata[1]=="Request/Declare - 0")
    SendSysMessage(who, "There are no request/declare of ally/war.",3,90);
    sleep(3);
    return;
  endif
  SendDialogGump(who,filllayout,filldata);
endfunction

function findgm(guild)
  var returninfo:={"In Vote", "0"},i,all:=guild.members,gm:=guild.getprop("gm");
  for(i:=1;i<=all.size();i:=i+1)
    if(all[i].serial=gm)
      returninfo[1]:=all[i].name;
      returninfo[2]:=all[i].serial;
      returninfo[3]:=all[i];
    endif
  endfor
  return returninfo;
endfunction

function FillInArrays(guild,alldata,heading)
  var chr,doit,num:=alldata.size(),i,j,locationscount:=3,rowcount:=120,pagecount:=2,count:=0,gm:=findgm(guild),col:=150;
  if(heading="Declare Fealty" or heading="Set Allies" or heading="Set Enemies" or heading="Dismiss Member" or heading="Grant Member Title" or heading="Refuse Recruit" or heading="Accept Recruit" or heading="View Status")
    col:=175;
  endif
  filllayout:={};
  filldata:={};
  filldata:={"", "", "Name"};
  filllayout:={"page 0", "nomove", "nodispose", "resizepic 120 35 5054 400 420", "resizepic 210 395 5100 200 25", "text 240 55 5 0", "text 240 75 5 1", "text "+col+" 100 0 2", "page 1"};
  var StatusArray:={};
  var CurrentStatus:="";
  var totRequestDeclare:=0;
  if(heading="View Status")
    StatusArray:=guild.getprop("GuildDeclareStatus");
    if(!StatusArray)
      StatusArray:={};
    endif
  endif
  for(i:=1;i<=num;i:=i+1)
    doit:=1;
    if(heading=="Set Allies")
      if(guild.isenemyguild(alldata[i])==1 or guild.guildid==alldata[i].guildid)
        doit:=0;
      endif
    endif
    if(heading=="Set Enemies")
      if(guild.isallyguild(alldata[i])==1 or guild.guildid==alldata[i].guildid)
        doit:=0;
      endif
    endif
    if(heading=="View Status")
      doit:=0;
      foreach gstatus in StatusArray
        if(alldata[i].guildid==gstatus[2])
          doit:=1;
          CurrentStatus:=gstatus[3];
          totRequestDeclare:=totRequestDeclare+1;
          break;
        endif
      endforeach
    endif
    if(doit==1)
      count:=count+1;
      if(count>13)
        count:=1;
        rowcount:=120;
        filllayout.append("button 315 396 5540 5541 0 "+pagecount);
        if(pagecount>2)
          filllayout.append("button 275 396 5537 5538 0 "+(pagecount-2));
        endif
        filllayout.append("page "+pagecount);
        pagecount:=pagecount+1;
      endif
      filllayout.append("text "+col+" "+rowcount+" 300 "+locationscount);
      if(heading=="Declare Fealty" or heading=="Dismiss Member" or heading=="Grant Member Title")
        filllayout.append("radio 150 "+rowcount+" 210 211 0 "+alldata[i].serial);
      endif
      if(heading=="Set Allies" or heading=="Set Enemies")
        filllayout.append("radio 150 "+rowcount+" 210 211 0 "+alldata[i].guildid);
      endif
      if(heading=="Member Listing" or heading=="Declare Fealty" or heading=="Dismiss Member" or heading=="Grant Member Title")
        if(gm[2]==alldata[i].serial)
          filldata.append("GM: "+alldata[i].name);
        else
          filldata.append(alldata[i].name);
        endif
      elseif(heading=="Ally Listing" or heading=="Enemy Listing")
        filldata.append(alldata[i].getprop("guildname"));
      elseif(heading=="View Status")
        if(CurrentStatus=="RA")
          filldata.append((alldata[i].getprop("guildname")+ "(request Ally)"));
        elseif(CurrentStatus=="BA")
          filldata.append((alldata[i].getprop("guildname")+ "(broken Ally)"));
        elseif(CurrentStatus=="RE")
          filldata.append((alldata[i].getprop("guildname")+ "(declare War)"));
        elseif(CurrentStatus=="BE")
          filldata.append((alldata[i].getprop("guildname")+ "(stop War)"));
        endif
      elseif(heading=="Set Enemies")
        if(guild.isenemyguild(alldata[i])==1)
          filldata.append((alldata[i].getprop("guildname")+ "(*)"));
        else
       filldata.append(alldata[i].getprop("guildname"));
        endif
      elseif(heading=="Set Allies")
        if(guild.isallyguild(alldata[i])==1)
          filldata.append((alldata[i].getprop("guildname")+ "(*)"));
        else
          filldata.append(alldata[i].getprop("guildname"));
        endif
      elseif(heading=="Recruit Listing")
        chr:=SystemFindObjectBySerial(alldata[i]);
        if(!chr)
          chr:=SystemFindObjectBySerial(alldata[i],SYSFIND_SEARCH_OFFLINE_MOBILES);
        endif
        filldata.append(chr.name);
      elseif(heading=="Refuse Recruit" or heading=="Accept Recruit")
        chr:=SystemFindObjectBySerial(alldata[i]);
        if(!chr)
          chr:=SystemFindObjectBySerial(alldata[i],SYSFIND_SEARCH_OFFLINE_MOBILES);
        endif
        filldata.append(chr.name);
        filllayout.append("radio 150 "+rowcount+" 210 211 0 "+chr.serial);
      endif
      locationscount:=locationscount+1;
      rowcount:=rowcount+20;
    endif
  endfor
  if(heading=="Member Listing")
    filldata[1]:=(i-1)+" - "+heading;
  elseif(heading=="Dismiss Member" or heading=="Grant Member Title" or heading=="Refuse Recruit" or heading=="Accept Recruit")
    filldata[1]:=(i-1)+" - "+heading;
    filllayout.append("button 350 396 4023 4024 1 0 1");
    filllayout.append("button 240 396 4017 4018 1 0 1000");
  elseif(heading=="View Status")
    filldata[1]:="Request/Declare - "+(totRequestDeclare);
  elseif(heading=="Ally Listing")
    filldata[1]:="Ally Guilds - "+(i-1);
  elseif(heading=="Enemy Listing")
    filldata[1]:="Enemy Guilds - "+(i-1);
  elseif(heading=="Recruit Listing")
    filldata[1]:="Current Recruits - "+(i-1);
  elseif(heading=="Set Allies")
    if(count==0)
      filldata[3]:="";
      filllayout.append("text "+col+" "+rowcount+" 300 "+locationscount);
      filldata.append("There are no guilds to choose from.");
    endif
    filldata[1]:="Delcare Peace(Ally)";
    filllayout.append("button 350 396 4023 4024 1 0 1");
    filllayout.append("button 240 396 4017 4018 1 0 1000");
  elseif(heading=="Set Enemies")
    if(count==0)
      filldata[3]:="";
      filllayout.append("text "+col+" "+rowcount+" 300 "+locationscount);
      filldata.append("There are no guilds to choose from.");
    endif
    filldata[1]:="Delcare War(Enemies)";
    filllayout.append("button 350 396 4023 4024 1 0 1");
    filllayout.append("button 240 396 4017 4018 1 0 1000");
  elseif(heading=="Declare Fealty")
    filldata[1]:=heading;
    filllayout.append("button 350 396 4023 4024 1 0 1");
    filllayout.append("button 240 396 4017 4018 1 0 1000");
  endif
  if(pagecount>2)
    filllayout.append("button 275 396 5537 5538 0 "+(pagecount-2));
  endif
endfunction

function SetGuildName(guild,who,stone)
  var changetime:=guild.getprop("nametime");
  if(ReadGameClock()<changetime)
    SendSysMessage(who, "You can only change the guild name once a week.",3,34);
    sleep(3);
    return;
  endif
  var tname:=SendTextEntryGump(who, "What is the guild name?",0,1,MAX_GUILD_NAME_SIZE, "Type the name.");
  if(!tname)
    sleep(3);
    return;
  endif
  if(len(tname)>MAX_GUILD_NAME_SIZE)
    SendSysMessage(who, "Guild name can't have more than "+MAX_GUILD_NAME_SIZE+" characters.",3,34);
    sleep(3);
    return;
  endif
  var i,dupe:=0,allguilds:=ListGuilds();
  for(i:=1;i<=allguilds.size();i:=i+1)
    if(lower(allguilds[i].getprop("guildname"))==lower(tname))
      dupe:=1;
    endif
  endfor
  if(dupe==1)
    PrintTextAbovePrivate(stone, "That guild name is already taken.",who);
    sleep(3);
    return;
  endif
  if(!NameValidation(tname))
    SendSysMessage(who, "You are using invalid characters",3,34);
    sleep(3);
    return;
  endif
  stone.name:="Guildstone for "+tname;
  guild.setprop("guildname",tname);
  guild.setprop("nametime",ReadGameClock()+(7*24*3600));
  allguilds:=guild.members;
  for(i:=1;i<=allguilds.size();i:=i+1)
    allguilds[i].title_guild:=tname;
  endfor
endfunction

function SetAbrevName(guild,who,stone)
  var changetime:=guild.getprop("abrvtime");
  if(ReadGameClock()<changetime)
    SendSysMessage(who, "You can only change the guild abbreviation once a week.",3,34);
    sleep(3);
    return;
  endif
  var tname:=SendTextEntryGump(who, "What's the new guild's abbreviation?",0,1,MAX_GUILD_ABREV_SIZE, "Type the abrev");
  if(!tname)
    return;
  endif
  if(len(tname)>MAX_GUILD_ABREV_SIZE)
    SendSysMessage(who, "Abbreviation can't have more than "+MAX_GUILD_ABREV_SIZE+" characters.",3,34);
    sleep(3);
    return;
  endif
  var abv,name,result,i,dupe:=0,allguilds:=ListGuilds();
  for(i:=1;i<=allguilds.size();i:=i+1)
    if(lower(allguilds[i].getprop("guildabv"))==lower(tname))
        dupe:=1;
    endif
  endfor
  if(dupe==1)
    PrintTextAbovePrivate(stone, "That abbreviation is already taken.",who);
    sleep(3);
    return;
  endif
  if(!NameValidation(tname))
    SendSysMessage(who, "You are using invalid characters.",3,34);
    sleep(3);
    return;
  endif
  allguilds:=guild.members;
  for(i:=1;i<=allguilds.size();i:=i+1)
    if(getobjproperty(allguilds[i].serial, "abv")<>"0")
      abv:=getobjproperty(allguilds[i].serial, "abv");
      result:=find(allguilds[i].name, " ["+abv+"]",1);
      name:=allguilds[i].name;
      result:=result-1;
      name:=name[1,result];
      allguilds[i].name:=name+" ["+tname+"]";
      setobjproperty(allguilds[i].serial, "abv",tname);
    endif
  endfor
  guild.setprop("guildabv",tname);
  guild.setprop("abrvtime",ReadGameClock()+(7*24*3600));
endfunction

function setcharter(guild,who)
  SetNotes(guild);
  var box:=SendDialogGump(who,chartsetlayout,chartsetdata);
  if(box[0]<>2)
    SendSysMessage(who, "Canceled.",3,34);
    sleep(1);
    return;
  endif
  var subnote,i,message:={};
  for(i:=2;i<=13;i:=i+1)
    subnote:=box[i];
    subnote[1,Find(subnote, ": ", 1)+1]:="";
    if(subnote<>"")
      message[i-1]:=subnote;
    endif
  endfor
  guild.setprop("gc",message);
  SendSysMessage(who, "Charter saved.",3,70);
endfunction

function SetNotes(guild)
  var i,message:=guild.getprop("gc");
  if(message[1]="NONE")
    return;
  endif
  for(i:=3; i<=14; i:=i+1)
    if(message[i-2]<>error)
      chartsetdata[i]:=message[i-2];
    else
      chartsetdata[i]:="";
    endif
  endfor
endfunction

function setstonecolor(guild,who,stone)
  var i,textline,maxcolor:=52,firstrow:=20,secondrow:=40,newcolor:=0;
  var res:=SendDialogGump(who,dyelayout,dyedata);
  var basecolor:=res[0];
  if(!basecolor)
    SendSysMessage(who, "Canceled.",3,34);
    return;
  elseif(basecolor==1101)
    maxcolor:=47;
  elseif(basecolor==2000)
    maxcolor:=18;
    firstrow:=18;
    secondrow:=18;
  endif
  if(basecolor==1)
    newcolor:=0;
  else
    for(i:=1;i<=firstrow;i:=i+1)
      textline:="button 20 "+cstr(65+(20*i))+" 2104 2103 1 0 "+cstr(basecolor+i);
      dyelayout2[cint(len(dyelayout2)+1)]:=textline;
    endfor
    for(i:=21;i<=secondrow;i:=i+1)
      textline:="button 100 "+cstr(65+(20*(i-20)))+" 2104 2103 1 0 "+cstr(basecolor+i);
      dyelayout2[cint(len(dyelayout2)+1)]:=textline;
    endfor
    for(i:=41;i<=maxcolor;i:=i+1)
      textline:="button 180 "+cstr(65+(20*(i-40)))+" 2104 2103 1 0 "+cstr(basecolor+i);
      dyelayout2[cint(len(dyelayout2)+1)]:=textline;
    endfor
    basecolor:=basecolor-1;
    for(i:=1;i<=firstrow;i:=i+1)
      textline:="text 40 "+cstr(60+(20*i))+" "+cstr(basecolor+i)+" "+cstr(i);
      dyelayout2[cint(len(dyelayout2)+1)]:=textline;
    endfor
    for(i:=21;i<= secondrow;i:=i+1)
      textline:="text 120 "+cstr(60+(20*(i-20)))+" "+cstr(basecolor+i)+" "+cstr(i);
      dyelayout2[cint(len(dyelayout2)+1)]:=textline;
    endfor
    for(i:=41;i<= maxcolor;i:=i+1)
      textline:="text 200 "+cstr(60+(20*(i-40)))+" "+cstr(basecolor + i)+" "+cstr(i);
      dyelayout2[cint(len(dyelayout2)+1)]:=textline;
    endfor
    dyelayout2[len(dyelayout2)+1]:="button 220 440 2119 2120 1 0 0";
    res:=SendDialogGump(who,dyelayout2,dyedata2);
    newcolor:=res[0];
    if(!newcolor)
      SendSysMessage(who, "Canceled.",3,34);
      return;
    endif
  endif
  stone.color:=newcolor;
endfunction

function Teleport(guild,who,stone)
  if(ReadGameClock()<guild.getprop("movetime"))
    SendSysMessage(who, "The guild stone can only be moved once a week.",3,34);
    return;
  endif
  guild.setprop("movetime",ReadGameClock()+(7*24*3600));
  stone.movable:=1;
  stone.newbie:=1;
  MoveItemToContainer(stone,who.backpack);
  stone.graphic:=UOBJ_PACKED_GUIDSTONE_GRAPHIC;
  stone.movable:=0;
  stone.usescript:=":guildstone:guildmove";
  SendSysMessage(who, "Double click on the stone in your backpack to place the stone.",3,70);
endfunction

function AcceptCandidate(guild,who)
  var recruits:=guild.getprop("recruits");
  if(recruits[1]="NONE")
    SendSysMessage(who, "There are no recruits.",3,34);
    sleep(3);
    return;
  endif
  FillInArrays(guild,recruits, "Accept Recruit");
  var i,choose:=0,box:=SendDialogGump(who,filllayout,filldata);
  if(box[0]==1000)
    return;
  elseif(box[0]==1)
    foreach k in(box.keys)
      if(k>1)
        choose:=k;
        break;
      endif
    endforeach
  else
    return;
  endif
  if(!choose or choose==0)
    return;
  endif
  var guildname;
  var chr := SystemFindObjectBySerial(choose);
  if(!chr)
    chr:=SystemFindObjectBySerial(choose,SYSFIND_SEARCH_OFFLINE_MOBILES);
  else
    if(guild.getprop("guildabv")=="NONE")
      guildname:=guild.getprop("guildname");
    else
      guildname:=guild.getprop("guildname");
    endif
    SendSysMessage(chr, "You have been accepted to the guild "+guildname+".",3,70);
  endif
  if(GetObjProperty(chr, "guild_id"))
    SendSysMessage(who,chr.name+" is already in a guild.",3,34);
    sleep(3);
  else
    guild.addmember(chr);
    setobjproperty(chr, "guild_id",guild_id);
    setobjproperty(chr, "fealty",chr.serial);
    setobjproperty(chr, "abv", "0");
    chr.title_guild:=guildname;
    chr.title_suffix := "";
  endif
  recruits:=guild.getprop("recruits");
  if(recruits.size()==1)
    recruits:={"NONE"};
  else
    for(i:=1;i<=recruits.size();i:=i+1)
      if(recruits[i]==choose)
        recruits.erase(i);
        break;
      endif
    endfor
  endif
  guild.setprop("recruits",recruits);
endfunction

function RefuseCandidate(guild,who)
  var recruits:=guild.getprop("recruits");
  if(recruits[1]=="NONE")
    SendSysMessage(who, "There are no recruits.",3,34);
    sleep(3);
    return;
  endif
  FillInArrays(guild,recruits, "Refuse Recruit");
  var i,choose:=0,box:=SendDialogGump(who,filllayout,filldata);
  if(box[0]==1000)
    return;
  elseif(box[0]==1)
    foreach k in(box.keys)
      if(k>1)
        choose:=k;
        break;
      endif
    endforeach
  else
    return;
  endif
  if(!choose or choose==0)
    return;
  endif
  var guildname,chr:=SystemFindObjectBySerial(choose);
  if(!chr)
    chr:=SystemFindObjectBySerial(choose,SYSFIND_SEARCH_OFFLINE_MOBILES);
  else
    if(guild.getprop("guildabv")=="NONE")
      guildname:=guild.getprop("guildname");
    else
      guildname:=guild.getprop("guildname")+" ["+guild.getprop("guildabv")+"]";
    endif
    SendSysMessage(chr, "You have NOT been accepted to the guild "+guildname+".",3,34);
  endif
  recruits:=guild.getprop("recruits");
  if(recruits.size()=1)
    recruits:={"NONE"};
  else
    for(i:=1;i<=recruits.size();i:=i+1)
      if(recruits[i]==choose)
        recruits.erase(i);
        break;
      endif
    endfor
  endif
  guild.setprop("recruits",recruits);
endfunction

function SetGMTitle(guild,who)
  var tname:=SendTextEntryGump(who, "What's the new guildmaster title name?",0,1,MAX_GM_TITLE_SIZE, "Type the name");
  if(!tname)
    return;
  endif
  if(len(tname)>MAX_GM_TITLE_SIZE)
    SendSysMessage(who, "Your title can't have more than "+MAX_GM_TITLE_SIZE+" characters.",3,34);
    sleep(3);
    return;
  endif
  if(!NameValidation(tname))
    SendSysMessage(who, "You are using invalid characters.",3,34);
    sleep(3);
    return;
  endif
  var gm := findgm(guild);
  var abv := "[" + guild.getprop("guildabv") + "]";
  SetObjProperty(gm[3], "guildtitle", tname);
  gm[3].title_guild := tname + ", " + abv;
  setobjproperty(who, "abv", "1");
endfunction

function GrantTitle(guild,who)
  var all:=guild.members;
  if(all.size()==1)
    SendSysMessage(who, "You only have one guild member.",3,34);
    sleep(3);
    return;
  endif
  FillInArrays(guild,all, "Grant Member Title");
  var i,choose:=0,box:=SendDialogGump(who,filllayout,filldata);
  if(box[0]==1000)
    return;
  elseif(box[0]==1)
    foreach k in(box.keys)
      if(k > 1)
        choose := k;
        break;
      endif
    endforeach
  else
    return;
  endif
  if(!choose or choose==0)
    return;
  endif
  var gm:=findgm(guild);
  if(choose==gm[2])
    SendSysMessage(who, "You cannot give the GM a title.",3,34);
    sleep(3);
    return;
  endif
  var tname:=SendTextEntryGump(who, "What's the new member title?",0,1,MAX_GUILD_TITLE_SIZE, "Type the title");
  if(!tname)
    return;
  endif
  if(len(tname)>MAX_GUILD_TITLE_SIZE)
    SendSysMessage(who, "Your title can't have more than "+MAX_GUILD_TITLE_SIZE+" characters.",3,34);
    sleep(3);
    return;
  endif
  if(!NameValidation(tname))
    SendSysMessage(who, "You are using invalid characters",3,34);
    sleep(3);
    return;
  endif
  for(i:=1;i<all.size();i:=i+1)
    if(all[i].serial == choose)
      break;
    endif
  endfor
  var abv := "[" + guild.getprop("guildabv") + "]";
  SetObjProperty(all[i], "guildtitle", tname);
  all[i].title_guild := tname + ", " + abv;
  setobjproperty(who, "abv", "1");
endfunction

function getclothes(guild, who, stone)

  if (getobjproperty (who, "clothes1"))
     sendsysmessage (who, "You already took your guildclothes");
     return;
  endif
  
  if (!((getobjproperty (stone, "clothes1obj"))))
     sendsysmessage (who, "Your guild still doesn't have official guild clothes");
     return;
  endif
  var nogold;
	foreach item in EnumerateItemsInContainer( who.backpack )
                if (!(item.graphic == 0xeed) or !(item.amount < 9999)) 
			nogold:=1;
		endif
		if ((item.graphic == 0xeed) and (item.amount > 9999)) 
			subtractamount(item , 10000);
			nogold:=0;
			break;
		endif

	endforeach

	if (nogold == 1)
		sendsysmessage (who, "You should have 10000 Goldcoin in your backpack");
 		return;
	endif
	

  var abv := guild.getprop("guildabv");

  var clothes1 := getobjproperty (stone, "clothes1obj");
  var clothes2 := getobjproperty (stone, "clothes2obj");
  
  var crclothes1 := createiteminbackpack (who, clothes1, 1);
  var crclothes2 := createiteminbackpack (who, clothes2, 1);
  setobjproperty (crclothes1, "gilda", 1);
  setobjproperty (crclothes2, "gilda", 1);

  crclothes1.color := (getobjproperty (stone, "clothes1col"));
  crclothes1.name := abv;
  crclothes1.newbie := 1;
  
  crclothes2.color := (getobjproperty (stone, "clothes2col"));
  crclothes2.name := abv;
  crclothes2.newbie := 1;
   
  setobjproperty (who, "clothes1", crclothes1.serial);
  setobjproperty (who, "clothes2", crclothes2.serial);
  return;

endfunction
  
  
