use uo;
use os;

include "include/client";
include "include/attributes";
include "include/classes";
include "include/spelldata";

const SPELL_EFFECT_TYPE_MOVING 	:= MOVING_SPELL_SPECTER_TOUCH;
const SPELL_EFFECT_ID		:= FX_SPELL_SPECTER_TOUCH;
const SPELL_EFFECT_SPEED	:= SPEED_SPELL_SPECTER_TOUCH;
const SPELL_EFFECT_LOOP		:= LOOP_SPELL_SPECTER_TOUCH;


program cast_spectretouch( parms )

	var circle := GetCircle( SPELLID_SPECTER_TOUCH );
	var plane := NECRO;
	var caster;
	var cast_on;
	var fromhit;

	if (parms[1] == "#MOB")
		caster := parms[2];
		cast_on := parms[3];
		if (parms[4])
			circle := parms[4];
		endif
		if (parms[5])
			fromhit := parms[5];
		endif

	else
		caster := parms;
		if( TryToCast( caster, SPELLID_SPECTER_TOUCH ) != SUCCESS )
			EraseObjProperty( caster, "#Casting" );
			return;
		endif
		SendSysMessage( caster, "Select a target." );
		cast_on := CanTargetArea( caster, circle );
	endif
		
	if( !cast_on )
		EraseObjProperty( caster, "#Casting" );
		return;
	endif
	
if(caster.npctemplate)
targetear_se_for_npc(caster,cast_on,fromhit);
else
targetear_se_for_human(caster,cast_on,fromhit);
endif

endprogram

function targetear_se_for_human(caster,cast_on,fromhit)
	var circle := GetCircle( SPELLID_SPECTER_TOUCH );
	var plane := NECRO;
	var dmg;
	var range := ModifyWithMagicEfficiency( caster, CInt( GetEffectiveSkill( caster, SKILLID_MAGERY ) / 30 ) );
	var victims := ListMobilesNearLocation( CInt(cast_on.x), CInt(cast_on.y), CInt(cast_on.z), range );
	EraseObjProperty( caster, "#Casting" );

	foreach mobile in victims

		if( CheckLosAt( mobile, CInt(cast_on.x), CInt(cast_on.y), CInt(cast_on.z) ) && mobile.dead == 0 && !mobile.multi )
			var immunity := IsProtected( caster, mobile, circle );
			var circ := circle;
			if( immunity != IMMUNED )
				if( immunity == CURSED )
					circ := circ * 2;
				endif
		
				dmg := CalcSpellDamage( caster, mobile, circ, AREA_EFFECT_SPELL );
				Send_attack( mobile, caster, SPELLID_SPECTER_TOUCH );
				PlaySoundEffect( mobile, SFX_SPELL_SPECTER_TOUCH );
				PlayStationaryEffect( CInt(mobile.x), CInt(mobile.y), CInt(mobile.z), FX_SPELL_SPECTER_TOUCH, SPEED_SPELL_SPECTER_TOUCH, LOOP_SPELL_SPECTER_TOUCH );
				ApplyplanarDamage( caster, mobile, circ, dmg, plane );
			endif
		endif

	endforeach

endfunction

function targetear_se_for_npc(caster,cast_on,fromhit)
	var circle := GetCircle( SPELLID_SPECTER_TOUCH );
	var plane := NECRO;
	var dmg;
	var range := ModifyWithMagicEfficiency( caster, CInt( GetEffectiveSkill( caster, SKILLID_MAGERY ) / 30 ) );
	var victims := ListMobilesNearLocation( CInt(cast_on.x), CInt(cast_on.y), CInt(cast_on.z), range );
	EraseObjProperty( caster, "#Casting" );

	foreach mobile in victims
	   if(!(mobile.npctemplate))
		if( CheckLosAt( mobile, CInt(cast_on.x), CInt(cast_on.y), CInt(cast_on.z) ) && mobile.dead == 0 && !mobile.multi )
			var immunity := IsProtected( caster, mobile, circle );
			var circ := circle;
			if( immunity != IMMUNED )
				if( immunity == CURSED )
					circ := circ * 2;
				endif
		
				dmg := CalcSpellDamage( caster, mobile, circ, AREA_EFFECT_SPELL );
				Send_attack( mobile, caster, SPELLID_SPECTER_TOUCH );
				PlaySoundEffect( mobile, SFX_SPELL_SPECTER_TOUCH );
				PlayStationaryEffect( CInt(mobile.x), CInt(mobile.y), CInt(mobile.z), FX_SPELL_SPECTER_TOUCH, SPEED_SPELL_SPECTER_TOUCH, LOOP_SPELL_SPECTER_TOUCH );
				ApplyplanarDamage( caster, mobile, circ, dmg, plane );
			endif
		endif
	   endif
	endforeach

endfunction
