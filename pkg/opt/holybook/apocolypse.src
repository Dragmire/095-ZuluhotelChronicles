use os;
use uo;

include "include/spelldata";
include "include/classes";
include "include/client";

const SPELL_EFFECT_TYPE_MOVING 	:= MOVING_SPELL_APOCOLYPSE;

program cast_rising_fire( parms )

	var circle := GetCircle( SPELLID_APOCOLYPSE );
	var element := HOLY;
	var caster;
	var cast_on;
	var fromhit;
	var immunity;
	var circ;
	var okay;
	var mobile;
	if (parms[1] == "#MOB")
		caster := parms[2];
		cast_on := parms[3];
		if (parms[4])
			circle := parms[4];
		endif
		if (parms[5])
			fromhit := parms[5];
		endif
	else
		caster := parms;
		if( TryToCast( caster, SPELLID_APOCOLYPSE ) != SUCCESS )
			EraseObjProperty( caster , "#Casting" );
			return;
		endif
		cast_on := CanTargetArea( caster , circle );
		if( !cast_on )
			EraseObjProperty( caster , "#Casting" );
			return;
		endif
	endif
	
	EraseObjProperty( caster , "#Casting" );
	
if(caster.npctemplate)
targetear_se_for_npc(caster,cast_on,fromhit);
else
targetear_se_for_human(caster,cast_on,fromhit);
endif


endprogram



function targetear_se_for_human(caster,cast_on,fromhit)

	var circle := GetCircle( SPELLID_APOCOLYPSE );
	var element := HOLY;
	var immunity;
	var circ;
	var okay;
	var mobile;
	var dmg;
	var range := GetObjProperty(caster, "IsMage");
	if (!range)
		range := 1;
	endif
	range := range * 2;
	if (range > 6)
		range := 6;
	endif
	var victims := ListMobilesNearLocationEx( cint(cast_on.x) , cint(cast_on.y) , cint(cast_on.z) , cint(range) , 0x03);

	foreach mobile in victims

		if( (CheckLosAt( mobile, cast_on.x , cast_on.y , cast_on.z ) ) )
			immunity := IsProtected( caster , mobile , circle );
			circ := circle;
			if( immunity == IMMUNED )
				continue;
			endif
	
			if( immunity == CURSED )
				circ := circ * 2;
			endif
			
			dmg := CalcSpellDamage( caster , mobile , circ , AREA_EFFECT_SPELL );
			send_attack(mobile,caster, SPELLID_CHAIN_LIGHTNING);
			PlayLightningBoltEffect( mobile );
			PlaySoundEffect(mobile, SFX_SPELL_CHAIN_LIGHTNING);
			PlayLightningBoltEffect( mobile );
			ApplyElementalDamage( caster , mobile , circ , (dmg/3) , element );
		endif

    	
	if( mobile.serial != caster.serial )
			immunity := IsProtected( caster, mobile, circle );
			if( immunity != IMMUNED )
				if( immunity == CURSED )
					circ := circle + circle;
				else
					circ := circle;
				endif
				dmg := CalcSpellDamage( caster, mobile, circ, AREA_EFFECT_SPELL );
				send_attack( mobile, caster, SPELLID_EARTHQUAKE );
				PrintTextAbovePrivate( mobile, "You are tossed about as the earth trembles below your feet!", mobile );
				PlaySoundEffect( mobile, SFX_SPELL_EARTHQUAKE1 );
				PlayObjectCenteredEffect( mobile, FX_SPELL_EARTHQUAKE, SPEED_SPELL_EARTHQUAKE, LOOP_SPELL_EARTHQUAKE );
				okay:=0;
				if(caster.multi || mobile.multi)
					if(caster.multi==mobile.multi) if((cint(mobile.z)==cint(caster.z)) || (cint(mobile.z)<cint(caster.z)+10)) okay:=1; endif endif
				else
					okay:=1;
				endif
				if (okay) ApplyElementalDamage( caster, mobile, circ, (dmg/3), element ); endif
			endif
		endif
		PlaySoundEffect( caster, SFX_SPELL_EARTHQUAKE2 );
		PlayMovingEffect( caster, cast_on, FX_SPELL_METEOR_SWARM , SPEED_SPELL_METEOR_SWARM , LOOP_SPELL_METEOR_SWARM );

		if( (CheckLosAt( mobile, cint(cast_on.x) , cint(cast_on.y) , cint(cast_on.z) ) ) )
			var immunity := IsProtected( caster , mobile , circle );
			var circ := circle;
			if( immunity != IMMUNED )
				if( immunity == CURSED )
					circ := circ * 2;
				endif
				dmg := CalcSpellDamage( caster , mobile , circ );
				send_attack(mobile,caster, SPELLID_METEOR_SWARM);
				PlaySoundEffect( mobile , SFX_SPELL_METEOR_SWARM);
				PlayMovingEffect( caster, mobile, FX_SPELL_METEOR_SWARM , SPEED_SPELL_METEOR_SWARM , LOOP_SPELL_METEOR_SWARM );
				ApplyElementalDamage( caster , mobile , circ , dmg / 3 + 1 , element );
			endif
		endif
		PlayMovingEffect( caster, cast_on, FX_SPELL_METEOR_SWARM , SPEED_SPELL_METEOR_SWARM , LOOP_SPELL_METEOR_SWARM );
endforeach
        foreach item in ListItemsNearLocationOfType (cint(caster.x), cint(caster.y), cint(caster.z), cint(range), UOBJ_STONEWALL_NS)
		if( GetObjProperty(item, "f") )
			PlayStationaryEffect( item.x , item.y , item.z , FX_SPELL_DISPEL_FIELD , SPEED_SPELL_DISPEL_FIELD , LOOP_SPELL_DISPEL_FIELD );
                	DestroyItem(item);
		endif
        endforeach

        foreach item in ListItemsNearLocationOfType (cint(caster.x), cint(caster.y), cint(caster.z), cint(range), UOBJ_STONEWALL_EW)
		if( GetObjProperty(item, "f") )
			PlayStationaryEffect( item.x , item.y , item.z , FX_SPELL_DISPEL_FIELD , SPEED_SPELL_DISPEL_FIELD , LOOP_SPELL_DISPEL_FIELD );
                	DestroyItem(item);
		endif
        endforeach
        
	foreach item in ListItemsNearLocationOfType (cint(caster.x), cint(caster.y), cint(caster.z), cint(range), UOBJ_EFIELD_NS)
		if( GetObjProperty(item, "f") )
			PlayStationaryEffect( item.x , item.y , item.z , FX_SPELL_DISPEL_FIELD , SPEED_SPELL_DISPEL_FIELD , LOOP_SPELL_DISPEL_FIELD );
                	DestroyItem(item);
		endif
        endforeach

        foreach item in ListItemsNearLocationOfType (cint(caster.x), cint(caster.y), cint(caster.z), cint(range), UOBJ_EFIELD_EW)
		if( GetObjProperty(item, "f") )
			PlayStationaryEffect( item.x , item.y , item.z , FX_SPELL_DISPEL_FIELD , SPEED_SPELL_DISPEL_FIELD , LOOP_SPELL_DISPEL_FIELD );
                	DestroyItem(item);
		endif
        endforeach
endfunction

function targetear_se_for_npc(caster,cast_on,fromhit)

	var circle := GetCircle( SPELLID_APOCOLYPSE );
	var element := HOLY;
	var dmg;
 	var immunity;
	var circ;
	var okay;
	var mobile;
	var range := GetObjProperty(caster, "IsMage");
	if (!range)
		range := 1;
	endif
	range := range * 2;
	if (range > 6)
		range := 6;
	endif
	var victims := ListMobilesNearLocationEx( cint(cast_on.x) , cint(cast_on.y) , cint(cast_on.z) , cint(range) , 0x03);

	foreach mobile in victims
	   if(!(mobile.npctemplate))
		if( (CheckLosAt( mobile, cast_on.x , cast_on.y , cast_on.z ) ) )
			immunity := IsProtected( caster , mobile , circle );
			circ := circle;
			if( immunity == IMMUNED )
				continue;
			endif
	
			if( immunity == CURSED )
				circ := circ * 2;
			endif
			
			dmg := CalcSpellDamage( caster , mobile , circ , AREA_EFFECT_SPELL );
			send_attack(mobile,caster, SPELLID_CHAIN_LIGHTNING);
			PlayLightningBoltEffect( mobile );
			PlaySoundEffect(mobile, SFX_SPELL_CHAIN_LIGHTNING);
			PlayLightningBoltEffect( mobile );
			ApplyElementalDamage( caster , mobile , circ , (dmg/3) , element );
		endif

    	
	if( mobile.serial != caster.serial )
			immunity := IsProtected( caster, mobile, circle );
			if( immunity != IMMUNED )
				if( immunity == CURSED )
					circ := circle + circle;
				else
					circ := circle;
				endif
				dmg := CalcSpellDamage( caster, mobile, circ, AREA_EFFECT_SPELL );
				send_attack( mobile, caster, SPELLID_EARTHQUAKE );
				PrintTextAbovePrivate( mobile, "You are tossed about as the earth trembles below your feet!", mobile );
				PlaySoundEffect( mobile, SFX_SPELL_EARTHQUAKE1 );
				PlayObjectCenteredEffect( mobile, FX_SPELL_EARTHQUAKE, SPEED_SPELL_EARTHQUAKE, LOOP_SPELL_EARTHQUAKE );
				okay:=0;
				if(caster.multi || mobile.multi)
					if(caster.multi==mobile.multi) if((cint(mobile.z)==cint(caster.z)) || (cint(mobile.z)<cint(caster.z)+10)) okay:=1; endif endif
				else
					okay:=1;
				endif
				if (okay) ApplyElementalDamage( caster, mobile, circ, (dmg/3), element ); endif
			endif
		endif
		PlaySoundEffect( caster, SFX_SPELL_EARTHQUAKE2 );
		PlayMovingEffect( caster, cast_on, FX_SPELL_METEOR_SWARM , SPEED_SPELL_METEOR_SWARM , LOOP_SPELL_METEOR_SWARM );

		if( (CheckLosAt( mobile, cint(cast_on.x) , cint(cast_on.y) , cint(cast_on.z) ) ) )
			var immunity := IsProtected( caster , mobile , circle );
			var circ := circle;
			if( immunity != IMMUNED )
				if( immunity == CURSED )
					circ := circ * 2;
				endif
				dmg := CalcSpellDamage( caster , mobile , circ );
				send_attack(mobile,caster, SPELLID_METEOR_SWARM);
				PlaySoundEffect( mobile , SFX_SPELL_METEOR_SWARM);
				PlayMovingEffect( caster, mobile, FX_SPELL_METEOR_SWARM , SPEED_SPELL_METEOR_SWARM , LOOP_SPELL_METEOR_SWARM );
				ApplyElementalDamage( caster , mobile , circ , dmg / 3 + 1 , element );
			endif
		endif
		PlayMovingEffect( caster, cast_on, FX_SPELL_METEOR_SWARM , SPEED_SPELL_METEOR_SWARM , LOOP_SPELL_METEOR_SWARM );
	   endif
	endforeach
        foreach item in ListItemsNearLocationOfType (cint(caster.x), cint(caster.y), cint(caster.z), cint(range), UOBJ_STONEWALL_NS)
		if( GetObjProperty(item, "f") )
			PlayStationaryEffect( item.x , item.y , item.z , FX_SPELL_DISPEL_FIELD , SPEED_SPELL_DISPEL_FIELD , LOOP_SPELL_DISPEL_FIELD );
                	DestroyItem(item);
		endif
        endforeach

        foreach item in ListItemsNearLocationOfType (cint(caster.x), cint(caster.y), cint(caster.z), cint(range), UOBJ_STONEWALL_EW)
		if( GetObjProperty(item, "f") )
			PlayStationaryEffect( item.x , item.y , item.z , FX_SPELL_DISPEL_FIELD , SPEED_SPELL_DISPEL_FIELD , LOOP_SPELL_DISPEL_FIELD );
                	DestroyItem(item);
		endif
        endforeach
        
	foreach item in ListItemsNearLocationOfType (cint(caster.x), cint(caster.y), cint(caster.z), cint(range), UOBJ_EFIELD_NS)
		if( GetObjProperty(item, "f") )
			PlayStationaryEffect( item.x , item.y , item.z , FX_SPELL_DISPEL_FIELD , SPEED_SPELL_DISPEL_FIELD , LOOP_SPELL_DISPEL_FIELD );
                	DestroyItem(item);
		endif
        endforeach

        foreach item in ListItemsNearLocationOfType (cint(caster.x), cint(caster.y), cint(caster.z), cint(range), UOBJ_EFIELD_EW)
		if( GetObjProperty(item, "f") )
			PlayStationaryEffect( item.x , item.y , item.z , FX_SPELL_DISPEL_FIELD , SPEED_SPELL_DISPEL_FIELD , LOOP_SPELL_DISPEL_FIELD );
                	DestroyItem(item);
		endif
        endforeach
endfunction
