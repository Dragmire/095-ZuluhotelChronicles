use uo;
use os;

include "include/spelldata";
include "include/attributes";
include "include/damages";
include "include/res";

const DELAY_BETWEEN_USE	:= 20;

program item_lifestream( who, item )
/*
	if( !ReserveItem( item ) )
		return;
	endif

	var last_use := CInt(GetObjProperty( item, "#last_use" ));
	if( last_use && last_use > CInt(ReadGameClock() - DELAY_BETWEEN_USE) )
		SendSysMessage( who, "You must wait before using it again." );
		return;
	endif

	SetObjProperty( item, "#last_use", CInt(ReadGameClock()) );

	if( !GetObjProperty( item, "RequireNoCharges" ) )
		var charges := CInt(GetObjProperty( item, "charges" ));
		if( !charges )
			PrintTextAbovePrivate( item, "That is out of charges", who );
			return;
		else
			charges := charges - 1;
			SetObjProperty( item, "charges", charges );
		endif
	endif

	SetHp(who, who.maxhp);
	SetMana(who, who.maxmana);
	SetStamina(who, who.maxstamina);

	Detach();

	foreach ghost in ListGhostsNearLocation( who.x, who.y, who.z, 10 );
		ResurrectMobile( ghost, who );
		PlaySoundEffect( who, SFX_SPELL_RESURRECTION );
		PlaySoundEffect( ghost, SFX_SPELL_RESURRECTION );
		SetHp(ghost, ghost.maxhp);
		SetMana(ghost, ghost.maxmana);
		SetStamina(ghost, who.maxstamina);
	endforeach

	foreach mobile in ListMobilesNearLocation( who.x, who.y, who.z, 10 );
		if( GetObjProperty( mobile, "Type" ) == "Undead" )
			ApplyTheDamage( mobile, who, (GetHp(mobile)+3), DMGID_MAGIC );
		else
			SetHp(mobile, mobile.maxhp);
			SetMana(mobile, mobile.maxmana);
			SetStamina(mobile, mobile.maxstamina);
		endif
	endforeach

	sleep( DELAY_BETWEEN_USE );
	EraseObjProperty( item, "#last_use" );
*/
endprogram