use uo;

include "include/spelldata";
include "include/client";
include "include/objtype";
include "include/skillpoints";
include "include/bard";
include "include/eventid";
include "include/checkcity";
include "include/res";
const SPELL_EFFECT_TYPE_MOVING 	:= MOVING_SPELL_REVIVE;
const SPELL_EFFECT_ID		:= FX_SPELL_REVIVE;
const SPELL_EFFECT_SPEED	:= SPEED_SPELL_REVIVE;
const SPELL_EFFECT_LOOP		:= LOOP_SPELL_REVIVE;
program cast_owlsight( player )
	SetObjProperty( player , "#Casting", 1 );
	var singinghp := GetHp( player );
	var circle := GetCircle( SPELLID_SONG_OF_SALVATION  );
	var caster := player;
	var cast_on := player;
	var instrument := findinstrument( player );
	var sfx_success;
	var sfx_failure;
	case( instrument.graphic )
		UOBJ_HARP:	sfx_success := SFX_HARP_SUCC;
				sfx_failure := SFX_HARP_FAIL;
				break;
				
		UOBJ_LUTE:	sfx_success := SFX_LUTE_SUCC;
				sfx_failure := SFX_LUTE_FAIL;
				break;
				
		UOBJ_DRUM:	sfx_success := SFX_DRUM_SUCC;
				sfx_failure := SFX_DRUM_FAIL;
				break;
				
		UOBJ_TAMB:	sfx_success := SFX_TAMB_SUCC;
				sfx_failure := SFX_TAMB_FAIL;
				break;
				
		default:	PrintTextAbovePrivate( player, "You dont have an Instrument!",player );
				EraseObjProperty( player , "#Casting" );
				return;
	endcase
	

	var peace := GetAttribute(caster, ATTRIBUTEID_PEACEMAKING);
	var mus := GetAttribute(caster, ATTRIBUTEID_MUSICIANSHIP);
	var spec := GetObjProperty(player,"IsBard");
	var ps;
	var proped := array();
	var drain := (circle*6)-(spec*2);
	var difficulty := (circle*12)+(Random(25)-(spec*8));
	//PrintTextAbove(player,"Difficulty:"+difficulty);
	PerformAction( player, 0X021 );
	if (difficulty > peace or difficulty > mus or !spec)
		PlaySoundEffect( caster , sfx_failure );
		EraseObjProperty( caster , "#Casting" );
		PrintTextAbove(player,"*"+player.name+" plays a song poorly*");
		ps := GetStamina( player ) -(drain/2);
		if (ps < 0 )
			ps := 0;
		endif
		GetStamina( player ) := ps;
		return;
	elseif ((GetStamina( player ) -drain) <  0)
		PrintTextAbove(player,"*"+player.name+" plays a song poorly*");
		PrintTextAbovePrivate( player, "Out of Stamina!",player );
		PlaySoundEffect( caster , sfx_failure );
	else
		ps := GetStamina( player ) -drain;
		if (ps < 0 )
			ps := 0;
		endif
		GetStamina( player ) := ps;
		sleep(2);
		if (GetHp( player ) < singinghp)
			PrintTextAbove(player,"*"+player.name+" plays a song poorly*");
			PrintTextAbovePrivate( player, "You were interrupted!",player );
			PlaySoundEffect( caster , sfx_failure );
			EraseObjProperty( caster , "#Casting" );
			return;
		else
			if (!spec)
				spec := 0;	
			endif
			spec := spec + 2;
			PerformAction( player, 0X021 );
			PlaySoundEffect( caster , sfx_success );
			PrintTextAbove(player,"Misericordia Dono Animo Exanimalis");
			sleep(2);
			var duration := mus * 70;
			var affected := ListMobilesNearLocation( caster.x , caster.y , caster.z , spec );
			foreach cast_near in affected
			if( GetObjProperty( cast_near , "Type" ) == "Undead" )
				SetHp( cast_near, GetMaxHp( cast_near ) / 2 );
				PlayObjectCenteredEffect( cast_near, FX_SPELL_CURE , SPEED_SPELL_CURE , LOOP_SPELL_CURE );
				PlaySoundEffect(cast_near, SFX_SPELL_REVIVE);
				PlaySoundEffect(caster, SFX_SPELL_REVIVE);
			else	
				foreach mob in EnumerateOnlineCharacters()	
					if (mob.dead and Distance(player,mob) <= spec )
						PlaySoundEffect(mob, SFX_SPELL_REVIVE);
						PlaySoundEffect(caster, SFX_SPELL_REVIVE);
						ResurrectMobile( mob , player );
					endif
				endforeach
			endif
			endforeach
		endif
	endif
		EraseObjProperty( caster , "#Casting" );
endprogram
